{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { server } from \"../../utils\";\nexport function useRegister() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const onSubmit = async () => {\n    const postData = getValues();\n    const result = await fetch(`${server}/users`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": \"token-value\"\n      },\n      body: JSON.stringify(postData)\n    });\n    if (!result.ok) {\n      console.log(result);\n    } else {\n      navigate(\"/dashboard\");\n    }\n  };\n  return {\n    register,\n    errors,\n    onSubmit: handleSubmit(onSubmit)\n  };\n}\n_s(useRegister, \"tcKOdbl524Wt4c5gZjPLrHuRdAg=\", false, function () {\n  return [useForm, useNavigate];\n});","map":{"version":3,"names":["useForm","useNavigate","server","useRegister","_s","register","handleSubmit","formState","errors","getValues","mode","navigate","showModal","setShowModal","useState","onSubmit","postData","result","fetch","method","headers","body","JSON","stringify","ok","console","log"],"sources":["/Users/amaliaavramov/MoldApp/frontend/src/pages/register/useRegister.ts"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { server } from \"../../utils\";\nimport { User } from \"../../types\";\n\n\nexport function useRegister() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n  } = useForm<User>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const [showModal, setShowModal]=useState(false);\n\n  const onSubmit = async () => {\n    const postData = getValues();\n    const result = await fetch(`${server}/users`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": \"token-value\",\n      },\n      body: JSON.stringify(postData),\n    });\n    if (!result.ok) {\n      console.log(result);\n    } else {\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return { register, errors, onSubmit: handleSubmit(onSubmit) };\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,aAAa;AAIpC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO,CAAC;IACrBC;EACF,CAAC,GAAGT,OAAO,CAAO;IAAEU,IAAI,EAAE;EAAW,CAAC,CAAC;EACvC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAACC,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAGP,SAAS,CAAC,CAAC;IAC5B,MAAMQ,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEhB,MAAO,QAAO,EAAE;MAC5CiB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAI,CAACC,MAAM,CAACO,EAAE,EAAE;MACdC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACrB,CAAC,MAAM;MACLN,QAAQ,CAAC,YAAY,CAAC;IACxB;EACF,CAAC;EAED,OAAO;IAAEN,QAAQ;IAAEG,MAAM;IAAEO,QAAQ,EAAET,YAAY,CAACS,QAAQ;EAAE,CAAC;AAC/D;AAACX,EAAA,CA5BeD,WAAW;EAAA,QAMrBH,OAAO,EACMC,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}