{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { server } from \"../../utils\";\nexport function useRegisterSensor() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue\n  } = useForm();\n  const onSubmit = async () => {\n    var _localStorage$getItem;\n    setValue(\"userId\", (_localStorage$getItem = localStorage.getItem(\"loggedUserId\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"\");\n    const postData = getValues();\n    const result = await fetch(`${server}/sensors`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": \"token-value\"\n      },\n      body: JSON.stringify(postData)\n    });\n    if (!result.ok) {\n      console.log(result);\n    } else {\n      console.log(\"sensor added\");\n    }\n  };\n  return {\n    register,\n    getValues,\n    setValue,\n    onSubmit: handleSubmit(onSubmit)\n  };\n}\n_s(useRegisterSensor, \"K+/oaJ2sjHiHko96uGcjSHQLoRo=\", false, function () {\n  return [useForm];\n});","map":{"version":3,"names":["useForm","server","useRegisterSensor","_s","register","handleSubmit","getValues","setValue","onSubmit","_localStorage$getItem","localStorage","getItem","postData","result","fetch","method","headers","body","JSON","stringify","ok","console","log"],"sources":["/Users/amaliaavramov/MoldApp/frontend/src/pages/dashboard/useRegisterSensor.ts"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Sensor } from \"../../types\";\nimport { server } from \"../../utils\";\n\nexport function useRegisterSensor() {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n  } = useForm<Sensor>();\n\n  const onSubmit = async () => {\n    setValue(\"userId\", localStorage.getItem(\"loggedUserId\") ?? \"\");\n    const postData = getValues();\n    const result = await fetch(`${server}/sensors`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": \"token-value\",\n      },\n      body: JSON.stringify(postData),\n    });\n    if (!result.ok) {\n      console.log(result);\n    } else {\n      console.log(\"sensor added\");\n    }\n  };\n  return { register, getValues, setValue, onSubmit: handleSubmit(onSubmit) };\n}\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,iBAAiB;AAEzC,SAASC,MAAM,QAAQ,aAAa;AAEpC,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC;EACF,CAAC,GAAGP,OAAO,CAAS,CAAC;EAErB,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,qBAAA;IAC3BF,QAAQ,CAAC,QAAQ,GAAAE,qBAAA,GAAEC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;IAC9D,MAAMG,QAAQ,GAAGN,SAAS,CAAC,CAAC;IAC5B,MAAMO,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEb,MAAO,UAAS,EAAE;MAC9Cc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,gBAAgB,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAI,CAACC,MAAM,CAACO,EAAE,EAAE;MACdC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACrB,CAAC,MAAM;MACLQ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B;EACF,CAAC;EACD,OAAO;IAAElB,QAAQ;IAAEE,SAAS;IAAEC,QAAQ;IAAEC,QAAQ,EAAEH,YAAY,CAACG,QAAQ;EAAE,CAAC;AAC5E;AAACL,EAAA,CA1BeD,iBAAiB;EAAA,QAM3BF,OAAO;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}