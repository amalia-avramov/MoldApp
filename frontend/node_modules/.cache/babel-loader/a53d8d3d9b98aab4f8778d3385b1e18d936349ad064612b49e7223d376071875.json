{"ast":null,"code":"var _jsxFileName = \"/Users/amaliaavramov/MoldApp/frontend/src/pages/dashboard/AddSensor.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport { useRegisterSensor } from \"./useRegisterSensor\";\nimport { Alert, Button, MenuItem, Modal, Select, TextField } from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport SensorsIcon from \"@mui/icons-material/Sensors\";\nimport classNames from \"classnames\";\nimport { useState } from \"react\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { availableRooms, wallTypes } from \"../../utils\";\nimport { Wizard, useWizard } from \"react-use-wizard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddSensor(_ref) {\n  _s();\n  let {\n    open,\n    onClose\n  } = _ref;\n  const {\n    register,\n    getValues,\n    setValue,\n    onSubmit\n  } = useRegisterSensor();\n  const [enterButton, setEnterButton] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(\"dashboard-add-sensor-container\", {\n        \"dashboard-add-sensor-container-first-step\": !enterButton,\n        \"dashboard-add-sensor-container-next-step\": enterButton\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          color: \"black\",\n          position: \"absolute\",\n          right: \"0\"\n        },\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Wizard, {\n        children: [/*#__PURE__*/_jsxDEV(IpAddressStep1, {\n          onClick: () => setEnterButton(true),\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IpAddressStep2, {\n          ipAddress: getValues(\"ipAddress\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NameStep, {\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RoomStep, {\n          setValue: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WallTypeStep, {\n          value: getValues(\"wallType\"),\n          register: register,\n          onSubmit: onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CompleteStep, {\n          selectedRoom: getValues(\"room\"),\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_s(AddSensor, \"Omo5FrhF7+qonvxFJ5UwSaIwiCc=\", false, function () {\n  return [useRegisterSensor];\n});\n_c = AddSensor;\nfunction AddSensorStep(_ref2) {\n  let {\n    title,\n    infoAlert,\n    button1Text,\n    button2Text,\n    children,\n    onClickFirstButton,\n    onClickSecondButton\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"dashboard-add-sensor-content\",\n    autoComplete: \"off\",\n    children: [title && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-text\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), children, infoAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Please note that this step is very important for predicting mold growth index.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-complete-buttons\",\n      children: [onClickFirstButton && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#ADC7EF\",\n          color: \"black\",\n          fontWeight: \"bold\",\n          width: \"90%\"\n        },\n        disableElevation: true,\n        onClick: onClickFirstButton,\n        children: button1Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), onClickSecondButton && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          color: \"#ADC7EF\",\n          fontWeight: \"bold\",\n          width: \"90%\"\n        },\n        disableElevation: true,\n        onClick: onClickSecondButton,\n        children: button2Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_c2 = AddSensorStep;\nfunction IpAddressStep1(_ref3) {\n  _s2();\n  let {\n    onClick,\n    register\n  } = _ref3;\n  const {\n    nextStep\n  } = useWizard();\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    title: \"Sensor\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-add-sensor-icon\",\n        children: /*#__PURE__*/_jsxDEV(SensorsIcon, {\n          style: {\n            fontSize: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"ipAddress\",\n        label: \"IP Address\",\n        className: \"dashboard-add-sensor-input\",\n        ...register(\"ipAddress\"),\n        onKeyPress: event => {\n          if (event.key === \"Enter\") {\n            event.preventDefault();\n            onClick();\n            nextStep();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 7\n  }, this);\n}\n_s2(IpAddressStep1, \"dKx6f5MTT+2QBMXJmuLAF0TmTJc=\", false, function () {\n  return [useWizard];\n});\n_c3 = IpAddressStep1;\nfunction IpAddressStep2(_ref4) {\n  _s3();\n  let {\n    ipAddress\n  } = _ref4;\n  const {\n    nextStep\n  } = useWizard();\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    title: ipAddress,\n    button1Text: \"Add sensor\",\n    onClickFirstButton: () => nextStep(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-icon\",\n      children: /*#__PURE__*/_jsxDEV(SensorsIcon, {\n        style: {\n          fontSize: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }, this);\n}\n_s3(IpAddressStep2, \"dKx6f5MTT+2QBMXJmuLAF0TmTJc=\", false, function () {\n  return [useWizard];\n});\n_c4 = IpAddressStep2;\nfunction NameStep(_ref5) {\n  _s4();\n  let {\n    register\n  } = _ref5;\n  const {\n    nextStep\n  } = useWizard();\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    title: \"Sensor name\",\n    button1Text: \"Continue\",\n    onClickFirstButton: () => nextStep(),\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"sensorName\",\n      label: \"Sensor name\",\n      className: \"dashboard-add-sensor-input\",\n      ...register(\"name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 7\n  }, this);\n}\n_s4(NameStep, \"dKx6f5MTT+2QBMXJmuLAF0TmTJc=\", false, function () {\n  return [useWizard];\n});\n_c5 = NameStep;\nfunction RoomStep(_ref6) {\n  _s5();\n  let {\n    setValue\n  } = _ref6;\n  const {\n    nextStep\n  } = useWizard();\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    title: \"Select location\",\n    button1Text: \"Continue\",\n    onClickFirstButton: () => nextStep(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-rooms\",\n      children: availableRooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-add-sensor-room\",\n          onClick: event => {\n            event.preventDefault();\n            setValue(\"room\", room.name);\n          },\n          children: room.name\n        }, room.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this);\n}\n_s5(RoomStep, \"dKx6f5MTT+2QBMXJmuLAF0TmTJc=\", false, function () {\n  return [useWizard];\n});\n_c6 = RoomStep;\nfunction WallTypeStep(_ref7) {\n  _s6();\n  let {\n    register,\n    onSubmit,\n    value\n  } = _ref7;\n  const {\n    nextStep\n  } = useWizard();\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    title: \"Wall type\",\n    infoAlert: true,\n    button1Text: \"Continue\",\n    onClickFirstButton: () => {\n      nextStep();\n      onSubmit();\n    },\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      id: \"wall-type-dropdown\",\n      label: \"Wall type\",\n      value: value,\n      ...register(\"wallType\"),\n      className: \"dashboard-add-sensor-dropdown\",\n      children: wallTypes.map((wall, index) => {\n        return /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: wall.name,\n          children: wall.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 7\n  }, this);\n}\n_s6(WallTypeStep, \"dKx6f5MTT+2QBMXJmuLAF0TmTJc=\", false, function () {\n  return [useWizard];\n});\n_c7 = WallTypeStep;\nfunction CompleteStep(_ref8) {\n  let {\n    selectedRoom,\n    onClose\n  } = _ref8;\n  console.log(selectedRoom);\n  return /*#__PURE__*/_jsxDEV(AddSensorStep, {\n    button1Text: \"Done\",\n    button2Text: \"View sensor\",\n    onClickFirstButton: onClose,\n    onClickSecondButton: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-add-sensor-complete\",\n      children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n        style: {\n          fontSize: \"100px\",\n          color: \"#ADC7EF\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-add-sensor-complete-text\",\n        children: \"Sensor added!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 7\n  }, this);\n}\n_c8 = CompleteStep;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"AddSensor\");\n$RefreshReg$(_c2, \"AddSensorStep\");\n$RefreshReg$(_c3, \"IpAddressStep1\");\n$RefreshReg$(_c4, \"IpAddressStep2\");\n$RefreshReg$(_c5, \"NameStep\");\n$RefreshReg$(_c6, \"RoomStep\");\n$RefreshReg$(_c7, \"WallTypeStep\");\n$RefreshReg$(_c8, \"CompleteStep\");","map":{"version":3,"names":["useRegisterSensor","Alert","Button","MenuItem","Modal","Select","TextField","CancelIcon","SensorsIcon","classNames","useState","CheckCircleOutlineIcon","availableRooms","wallTypes","Wizard","useWizard","jsxDEV","_jsxDEV","AddSensor","_ref","_s","open","onClose","register","getValues","setValue","onSubmit","enterButton","setEnterButton","children","className","style","color","position","right","onClick","fileName","_jsxFileName","lineNumber","columnNumber","IpAddressStep1","IpAddressStep2","ipAddress","NameStep","RoomStep","WallTypeStep","value","CompleteStep","selectedRoom","_c","AddSensorStep","_ref2","title","infoAlert","button1Text","button2Text","onClickFirstButton","onClickSecondButton","autoComplete","severity","backgroundColor","fontWeight","width","disableElevation","_c2","_ref3","_s2","nextStep","fontSize","required","id","label","onKeyPress","event","key","preventDefault","_c3","_ref4","_s3","_c4","_ref5","_s4","_c5","_ref6","_s5","map","room","name","_c6","_ref7","_s6","wall","index","_c7","_ref8","console","log","_c8","$RefreshReg$"],"sources":["/Users/amaliaavramov/MoldApp/frontend/src/pages/dashboard/AddSensor.tsx"],"sourcesContent":["import { useRegisterSensor } from \"./useRegisterSensor\";\nimport {\n    Alert,\n    Button,\n    MenuItem,\n    Modal,\n    Select,\n    TextField,\n  } from \"@mui/material\";\n  import CancelIcon from \"@mui/icons-material/Cancel\";\nimport SensorsIcon from \"@mui/icons-material/Sensors\";\nimport classNames from \"classnames\";\nimport { useState } from \"react\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { UseFormRegister, UseFormSetValue } from \"react-hook-form\";\nimport { Sensor } from \"../../types\";\nimport { availableRooms, wallTypes } from \"../../utils\";\nimport { Wizard, useWizard } from \"react-use-wizard\";\n\nexport function AddSensor({ open, onClose }: { open: boolean; onClose: () => void }) {\n    const { register, getValues, setValue, onSubmit } = useRegisterSensor();\n    const [enterButton, setEnterButton] = useState(false);\n  \n    return (\n      <Modal open={open}>\n        <div\n          className={classNames(\"dashboard-add-sensor-container\", {\n            \"dashboard-add-sensor-container-first-step\": !enterButton,\n            \"dashboard-add-sensor-container-next-step\": enterButton,\n          })}\n        >\n          <Button\n            style={{ color: \"black\", position: \"absolute\", right: \"0\" }}\n            onClick={onClose}\n          >\n            <CancelIcon />\n          </Button>\n          <Wizard>\n            <IpAddressStep1\n              onClick={() => setEnterButton(true)}\n              register={register}\n            />\n            <IpAddressStep2 ipAddress={getValues(\"ipAddress\")} />\n            <NameStep register={register} />\n            <RoomStep setValue={setValue} />\n            <WallTypeStep\n              value={getValues(\"wallType\")}\n              register={register}\n              onSubmit={onSubmit}\n            />\n            <CompleteStep selectedRoom={getValues(\"room\")} onClose={onClose} />\n          </Wizard>\n        </div>\n      </Modal>\n    );\n  }\n  \n  function AddSensorStep({\n    title,\n    infoAlert,\n    button1Text,\n    button2Text,\n    children,\n    onClickFirstButton,\n    onClickSecondButton,\n  }: {\n    title?: string;\n    infoAlert?: boolean;\n    button1Text?: string;\n    button2Text?: string;\n    children: React.ReactNode;\n    onClickFirstButton?: () => void;\n    onClickSecondButton?: () => void;\n  }) {\n    return (\n      <form className=\"dashboard-add-sensor-content\" autoComplete=\"off\">\n        {title && <div className=\"dashboard-add-sensor-text\">{title}</div>}\n        {children}\n        {infoAlert && (\n          <Alert severity=\"info\">\n            Please note that this step is very important for predicting mold\n            growth index.\n          </Alert>\n        )}\n        <div className=\"dashboard-add-sensor-complete-buttons\">\n          {onClickFirstButton && (\n            <Button\n              style={{\n                backgroundColor: \"#ADC7EF\",\n                color: \"black\",\n                fontWeight: \"bold\",\n                width: \"90%\",\n              }}\n              disableElevation\n              onClick={onClickFirstButton}\n            >\n              {button1Text}\n            </Button>\n          )}\n          {onClickSecondButton && (\n            <Button\n              style={{\n                color: \"#ADC7EF\",\n                fontWeight: \"bold\",\n                width: \"90%\",\n              }}\n              disableElevation\n              onClick={onClickSecondButton}\n            >\n              {button2Text}\n            </Button>\n          )}\n        </div>\n      </form>\n    );\n  }\n  \n  function IpAddressStep1({\n    onClick,\n    register,\n  }: {\n    onClick: () => void;\n    register: UseFormRegister<Sensor>;\n  }) {\n    const { nextStep } = useWizard();\n    return (\n      <AddSensorStep title=\"Sensor\">\n        <div className=\"dashboard-add-sensor-body\">\n          <div className=\"dashboard-add-sensor-icon\">\n            <SensorsIcon style={{ fontSize: \"50px\" }} />\n          </div>\n          <TextField\n            required\n            id=\"ipAddress\"\n            label=\"IP Address\"\n            className=\"dashboard-add-sensor-input\"\n            {...register(\"ipAddress\")}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                event.preventDefault();\n                onClick();\n                nextStep();\n              }\n            }}\n          />\n        </div>\n      </AddSensorStep>\n    );\n  }\n  \n  function IpAddressStep2({ ipAddress }: { ipAddress: string }) {\n    const { nextStep } = useWizard();\n    return (\n      <AddSensorStep\n        title={ipAddress}\n        button1Text=\"Add sensor\"\n        onClickFirstButton={() => nextStep()}\n      >\n        <div className=\"dashboard-add-sensor-icon\">\n          <SensorsIcon style={{ fontSize: \"50px\" }} />\n        </div>\n      </AddSensorStep>\n    );\n  }\n  \n  function NameStep({ register }: { register: UseFormRegister<Sensor> }) {\n    const { nextStep } = useWizard();\n    return (\n      <AddSensorStep\n        title=\"Sensor name\"\n        button1Text=\"Continue\"\n        onClickFirstButton={() => nextStep()}\n      >\n        <TextField\n          required\n          id=\"sensorName\"\n          label=\"Sensor name\"\n          className=\"dashboard-add-sensor-input\"\n          {...register(\"name\")}\n        />\n      </AddSensorStep>\n    );\n  }\n  \n  function RoomStep({ setValue }: { setValue: UseFormSetValue<Sensor> }) {\n    const { nextStep } = useWizard();\n    return (\n      <AddSensorStep\n        title=\"Select location\"\n        button1Text=\"Continue\"\n        onClickFirstButton={() => nextStep()}\n      >\n        <div className=\"dashboard-add-sensor-rooms\">\n          {availableRooms.map((room) => {\n            return (\n              <button\n                key={room.name}\n                className=\"dashboard-add-sensor-room\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  setValue(\"room\", room.name);\n                }}\n              >\n                {room.name}\n              </button>\n            );\n          })}\n        </div>\n      </AddSensorStep>\n    );\n  }\n  \n  function WallTypeStep({\n    register,\n    onSubmit,\n    value,\n  }: {\n    register: UseFormRegister<Sensor>;\n    onSubmit: (\n      e?: React.BaseSyntheticEvent<object, any, any> | undefined\n    ) => Promise<void>;\n    value: string;\n  }) {\n    const { nextStep } = useWizard();\n    return (\n      <AddSensorStep\n        title=\"Wall type\"\n        infoAlert\n        button1Text=\"Continue\"\n        onClickFirstButton={() => {\n          nextStep();\n          onSubmit();\n        }}\n      >\n        <Select\n          id=\"wall-type-dropdown\"\n          label=\"Wall type\"\n          value={value}\n          {...register(\"wallType\")}\n          className=\"dashboard-add-sensor-dropdown\"\n        >\n          {wallTypes.map((wall, index) => {\n            return (\n              <MenuItem value={wall.name} key={index}>\n                {wall.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </AddSensorStep>\n    );\n  }\n  \n  function CompleteStep({\n    selectedRoom,\n    onClose,\n  }: {\n    selectedRoom: string;\n    onClose: () => void;\n  }) {\n    console.log(selectedRoom)\n    return (\n      <AddSensorStep\n        button1Text=\"Done\"\n        button2Text=\"View sensor\"\n        onClickFirstButton={onClose}\n        onClickSecondButton={onClose}\n      >\n        <div className=\"dashboard-add-sensor-complete\">\n          <CheckCircleOutlineIcon\n            style={{ fontSize: \"100px\", color: \"#ADC7EF\" }}\n          />\n          <div className=\"dashboard-add-sensor-complete-text\">\n            Sensor added!\n          </div>\n        </div>\n      </AddSensorStep>\n    );\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}