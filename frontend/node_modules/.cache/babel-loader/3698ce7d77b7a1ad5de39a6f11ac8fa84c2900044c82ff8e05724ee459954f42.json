{"ast":null,"code":"import { createContext, useContext, memo, useState, useRef, Children, useMemo, isValidElement, cloneElement, createElement } from 'react';\nconst WizardContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  WizardContext.displayName = 'WizardContext';\n}\nconst useWizard = () => {\n  const context = useContext(WizardContext);\n  if (!context && process.env.NODE_ENV !== \"production\") {\n    throw Error('Wrap your step with `Wizard`');\n  } else {\n    return context;\n  }\n};\n\n/**\r\n * Log messages in the console with a corresponding urgency\r\n *\r\n * @param level The urgency of the message\r\n * @param message The message to log in the console\r\n */\nconst log = (level, message) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const packageName = '[react-use-wizard]';\n    switch (level) {\n      case 'warn':\n        console.warn(packageName + \" \" + message);\n        break;\n      case 'error':\n        console.error(packageName + \" \" + message);\n        break;\n      default:\n        console.log(packageName + \" \" + message);\n    }\n  }\n};\nconst Wizard = /*#__PURE__*/memo(_ref => {\n  let {\n    header,\n    footer,\n    children,\n    wrapper: Wrapper,\n    startIndex = 0\n  } = _ref;\n  const [activeStep, setActiveStep] = useState(startIndex);\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNextStep = useRef(true);\n  const hasPreviousStep = useRef(false);\n  const nextStepHandler = useRef(() => {});\n  const stepCount = Children.toArray(children).length;\n  hasNextStep.current = activeStep < stepCount - 1;\n  hasPreviousStep.current = activeStep > 0;\n  const goToNextStep = useRef(() => {\n    if (hasNextStep.current) {\n      setActiveStep(activeStep => activeStep + 1);\n    }\n  });\n  const goToPreviousStep = useRef(() => {\n    if (hasPreviousStep.current) {\n      nextStepHandler.current = null;\n      setActiveStep(activeStep => activeStep - 1);\n    }\n  });\n  const goToStep = useRef(stepIndex => {\n    if (stepIndex >= 0 && stepIndex < stepCount) {\n      nextStepHandler.current = null;\n      setActiveStep(stepIndex);\n    } else {\n      if (process.env.NODE_ENV !== \"production\") {\n        log('warn', [\"Invalid step index [\" + stepIndex + \"] passed to 'goToStep'. \", \"Ensure the given stepIndex is not out of boundaries.\"].join(''));\n      }\n    }\n  }); // Callback to attach the step handler\n\n  const handleStep = useRef(handler => {\n    nextStepHandler.current = handler;\n  });\n  const doNextStep = useRef(async () => {\n    if (hasNextStep.current && nextStepHandler.current) {\n      try {\n        setIsLoading(true);\n        await nextStepHandler.current();\n        setIsLoading(false);\n        nextStepHandler.current = null;\n        goToNextStep.current();\n      } catch (error) {\n        setIsLoading(false);\n        throw error;\n      }\n    } else {\n      goToNextStep.current();\n    }\n  });\n  const wizardValue = useMemo(() => ({\n    nextStep: doNextStep.current,\n    previousStep: goToPreviousStep.current,\n    handleStep: handleStep.current,\n    isLoading,\n    activeStep,\n    stepCount,\n    isFirstStep: !hasPreviousStep.current,\n    isLastStep: !hasNextStep.current,\n    goToStep: goToStep.current\n  }), [activeStep, stepCount, isLoading]);\n  const activeStepContent = useMemo(() => {\n    const reactChildren = Children.toArray(children);\n    if (process.env.NODE_ENV !== \"production\") {\n      // No steps passed\n      if (reactChildren.length === 0) {\n        log('warn', 'Make sure to pass your steps as children in your <Wizard>');\n      } // The passed start index is invalid\n\n      if (activeStep > reactChildren.length) {\n        log('warn', 'An invalid startIndex is passed to <Wizard>');\n      } // Invalid header element\n\n      if (header && !isValidElement(header)) {\n        log('error', 'Invalid header passed to <Wizard>');\n      } // Invalid footer element\n\n      if (footer && !isValidElement(footer)) {\n        log('error', 'Invalid footer passed to <Wizard>');\n      }\n    }\n    return reactChildren[activeStep];\n  }, [activeStep, children, header, footer]);\n  const enhancedActiveStepContent = useMemo(() => Wrapper ? cloneElement(Wrapper, {\n    children: activeStepContent\n  }) : activeStepContent, [Wrapper, activeStepContent]);\n  return createElement(WizardContext.Provider, {\n    value: wizardValue\n  }, header, enhancedActiveStepContent, footer);\n});\nexport { Wizard, useWizard };","map":{"version":3,"names":["WizardContext","createContext","process","env","NODE_ENV","displayName","useWizard","context","useContext","Error","log","level","message","packageName","console","warn","error","Wizard","memo","_ref","header","footer","children","wrapper","Wrapper","startIndex","activeStep","setActiveStep","useState","isLoading","setIsLoading","hasNextStep","useRef","hasPreviousStep","nextStepHandler","stepCount","Children","toArray","length","current","goToNextStep","goToPreviousStep","goToStep","stepIndex","join","handleStep","handler","doNextStep","wizardValue","useMemo","nextStep","previousStep","isFirstStep","isLastStep","activeStepContent","reactChildren","isValidElement","enhancedActiveStepContent","cloneElement","createElement","Provider","value"],"sources":["/Users/amaliaavramov/MoldApp/frontend/node_modules/react-use-wizard/src/wizardContext.ts","/Users/amaliaavramov/MoldApp/frontend/node_modules/react-use-wizard/src/useWizard.ts","/Users/amaliaavramov/MoldApp/frontend/node_modules/react-use-wizard/src/logger.ts","/Users/amaliaavramov/MoldApp/frontend/node_modules/react-use-wizard/src/wizard.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { WizardValues } from './types';\n\nconst WizardContext = React.createContext<WizardValues | null>(null);\n\nif (__DEV__) {\n  WizardContext.displayName = 'WizardContext';\n}\n\nexport default WizardContext;\n","import * as React from 'react';\n\nimport { WizardValues } from './types';\nimport WizardContext from './wizardContext';\n\nconst useWizard = () => {\n  const context = React.useContext(WizardContext);\n\n  if (!context && __DEV__) {\n    throw Error('Wrap your step with `Wizard`');\n  } else {\n    return context as WizardValues;\n  }\n};\n\nexport default useWizard;\n","import { LogLevel } from './types';\n/**\n * Log messages in the console with a corresponding urgency\n *\n * @param level The urgency of the message\n * @param message The message to log in the console\n */\nexport const log = (level: LogLevel, message: string) => {\n  if (__DEV__) {\n    const packageName = '[react-use-wizard]';\n\n    switch (level) {\n      case 'warn':\n        console.warn(`${packageName} ${message}`);\n        break;\n      case 'error':\n        console.error(`${packageName} ${message}`);\n        break;\n      default:\n        console.log(`${packageName} ${message}`);\n    }\n  }\n};\n","import * as React from 'react';\n\nimport * as logger from './logger';\nimport { Handler, WizardProps } from './types';\nimport WizardContext from './wizardContext';\n\nconst Wizard: React.FC<React.PropsWithChildren<WizardProps>> = React.memo(\n  ({ header, footer, children, wrapper: Wrapper, startIndex = 0 }) => {\n    const [activeStep, setActiveStep] = React.useState(startIndex);\n    const [isLoading, setIsLoading] = React.useState(false);\n    const hasNextStep = React.useRef(true);\n    const hasPreviousStep = React.useRef(false);\n    const nextStepHandler = React.useRef<Handler>(() => {});\n    const stepCount = React.Children.toArray(children).length;\n\n    hasNextStep.current = activeStep < stepCount - 1;\n    hasPreviousStep.current = activeStep > 0;\n\n    const goToNextStep = React.useRef(() => {\n      if (hasNextStep.current) {\n        setActiveStep((activeStep) => activeStep + 1);\n      }\n    });\n\n    const goToPreviousStep = React.useRef(() => {\n      if (hasPreviousStep.current) {\n        nextStepHandler.current = null;\n        setActiveStep((activeStep) => activeStep - 1);\n      }\n    });\n\n    const goToStep = React.useRef((stepIndex: number) => {\n      if (stepIndex >= 0 && stepIndex < stepCount) {\n        nextStepHandler.current = null;\n        setActiveStep(stepIndex);\n      } else {\n        if (__DEV__) {\n          logger.log(\n            'warn',\n            [\n              `Invalid step index [${stepIndex}] passed to 'goToStep'. `,\n              `Ensure the given stepIndex is not out of boundaries.`,\n            ].join(''),\n          );\n        }\n      }\n    });\n\n    // Callback to attach the step handler\n    const handleStep = React.useRef((handler: Handler) => {\n      nextStepHandler.current = handler;\n    });\n\n    const doNextStep = React.useRef(async () => {\n      if (hasNextStep.current && nextStepHandler.current) {\n        try {\n          setIsLoading(true);\n          await nextStepHandler.current();\n          setIsLoading(false);\n          nextStepHandler.current = null;\n          goToNextStep.current();\n        } catch (error) {\n          setIsLoading(false);\n          throw error;\n        }\n      } else {\n        goToNextStep.current();\n      }\n    });\n\n    const wizardValue = React.useMemo(\n      () => ({\n        nextStep: doNextStep.current,\n        previousStep: goToPreviousStep.current,\n        handleStep: handleStep.current,\n        isLoading,\n        activeStep,\n        stepCount,\n        isFirstStep: !hasPreviousStep.current,\n        isLastStep: !hasNextStep.current,\n        goToStep: goToStep.current,\n      }),\n      [activeStep, stepCount, isLoading],\n    );\n\n    const activeStepContent = React.useMemo(() => {\n      const reactChildren = React.Children.toArray(children);\n\n      if (__DEV__) {\n        // No steps passed\n        if (reactChildren.length === 0) {\n          logger.log(\n            'warn',\n            'Make sure to pass your steps as children in your <Wizard>',\n          );\n        }\n        // The passed start index is invalid\n        if (activeStep > reactChildren.length) {\n          logger.log('warn', 'An invalid startIndex is passed to <Wizard>');\n        }\n        // Invalid header element\n        if (header && !React.isValidElement(header)) {\n          logger.log('error', 'Invalid header passed to <Wizard>');\n        }\n        // Invalid footer element\n        if (footer && !React.isValidElement(footer)) {\n          logger.log('error', 'Invalid footer passed to <Wizard>');\n        }\n      }\n\n      return reactChildren[activeStep];\n    }, [activeStep, children, header, footer]);\n\n    const enhancedActiveStepContent = React.useMemo(\n      () =>\n        Wrapper\n          ? React.cloneElement(Wrapper, { children: activeStepContent })\n          : activeStepContent,\n      [Wrapper, activeStepContent],\n    );\n\n    return (\n      <WizardContext.Provider value={wizardValue}>\n        {header}\n        {enhancedActiveStepContent}\n        {footer}\n      </WizardContext.Provider>\n    );\n  },\n);\n\nexport default Wizard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}