{"ast":null,"code":"var _s = $RefreshSig$();\nimport useSWR from \"swr\";\nimport { server } from \"../../utils\";\nexport function useRoom() {\n  _s();\n  const userId = localStorage.getItem(\"loggedUserId\");\n  const fetcher = url => fetch(url).then(res => res.json());\n  const {\n    data: rooms,\n    isLoading,\n    mutate\n  } = useSWR(`${server}/sensors/rooms/${userId}`, fetcher);\n  return {\n    rooms: rooms !== null && rooms !== void 0 ? rooms : [],\n    isLoading\n  };\n}\n_s(useRoom, \"Y1rBrUsFafDVE2os2Z6CDib0mKQ=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["useSWR","server","useRoom","_s","userId","localStorage","getItem","fetcher","url","fetch","then","res","json","data","rooms","isLoading","mutate"],"sources":["/Users/amaliaavramov/MoldApp/frontend/src/pages/rooms/useRooms.ts"],"sourcesContent":["import useSWR from \"swr\";\nimport { server } from \"../../utils\";\nimport { Room } from \"../../types\";\n\nexport function useRoom() {\n  const userId = localStorage.getItem(\"loggedUserId\");\n\n  const fetcher = (url: string) => fetch(url).then((res) => res.json());\n\n  const { data: rooms, isLoading, mutate } = useSWR<Room[]>(\n    `${server}/sensors/rooms/${userId}`,\n    fetcher\n  );\n  return { rooms: rooms ?? [], isLoading };\n}\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,KAAK;AACxB,SAASC,MAAM,QAAQ,aAAa;AAGpC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAEnD,MAAMC,OAAO,GAAIC,GAAW,IAAKC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAErE,MAAM;IAAEC,IAAI,EAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGhB,MAAM,CAC9C,GAAEC,MAAO,kBAAiBG,MAAO,EAAC,EACnCG,OACF,CAAC;EACD,OAAO;IAAEO,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE;IAAEC;EAAU,CAAC;AAC1C;AAACZ,EAAA,CAVeD,OAAO;EAAA,QAKsBF,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}