{"ast":null,"code":"var _s = $RefreshSig$();\nimport useSWR from \"swr\";\nimport { server } from \"../../utils\";\nexport function useRoom() {\n  _s();\n  const userId = localStorage.getItem(\"loggedUserId\");\n  const fetcher = url => fetch(url).then(res => res.json());\n  const {\n    data: rooms,\n    isLoading,\n    mutate\n  } = useSWR(`${server}/sensors/rooms/${userId}`, fetcher);\n  const onDelete = async id => {\n    try {\n      const response = await fetch(`${server}/sensors/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        mutate();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return {\n    rooms: rooms !== null && rooms !== void 0 ? rooms : [],\n    isLoading,\n    onDelete\n  };\n}\n_s(useRoom, \"B7J4XRnBzNLv/l3mSkIAHBnjDz8=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["useSWR","server","useRoom","_s","userId","localStorage","getItem","fetcher","url","fetch","then","res","json","data","rooms","isLoading","mutate","onDelete","id","response","method","headers","ok","Error","status","e","console","error"],"sources":["/Users/amaliaavramov/MoldApp/frontend/src/pages/rooms/useRooms.ts"],"sourcesContent":["import useSWR from \"swr\";\nimport { server } from \"../../utils\";\nimport { Room } from \"../../types\";\n\nexport function useRoom() {\n  const userId = localStorage.getItem(\"loggedUserId\");\n\n  const fetcher = (url: string) => fetch(url).then((res) => res.json());\n\n  const {\n    data: rooms,\n    isLoading,\n    mutate,\n  } = useSWR<Room[]>(`${server}/sensors/rooms/${userId}`, fetcher);\n\n  const onDelete = async (id: string): Promise<void> => {\n    try {\n      const response = await fetch(`${server}/sensors/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        mutate();\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return { rooms: rooms ?? [], isLoading, onDelete };\n}\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,KAAK;AACxB,SAASC,MAAM,QAAQ,aAAa;AAGpC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAEnD,MAAMC,OAAO,GAAIC,GAAW,IAAKC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;EAErE,MAAM;IACJC,IAAI,EAAEC,KAAK;IACXC,SAAS;IACTC;EACF,CAAC,GAAGhB,MAAM,CAAU,GAAEC,MAAO,kBAAiBG,MAAO,EAAC,EAAEG,OAAO,CAAC;EAEhE,MAAMU,QAAQ,GAAG,MAAOC,EAAU,IAAoB;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAE,GAAER,MAAO,YAAWiB,EAAG,EAAC,EAAE;QACtDE,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;MAC3D,CAAC,MAAM;QACLR,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAAC,OAAOS,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAClB;EACF,CAAC;EAED,OAAO;IAAEX,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE;IAAEC,SAAS;IAAEE;EAAS,CAAC;AACpD;AAACd,EAAA,CA9BeD,OAAO;EAAA,QASjBF,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}